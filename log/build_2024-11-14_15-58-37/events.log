[0.000000] (-) TimerEvent: {}
[0.000438] (-) JobUnselected: {'identifier': 'aruco_detection'}
[0.000640] (-) JobUnselected: {'identifier': 'image_stream'}
[0.000692] (-) JobUnselected: {'identifier': 'puzzlebot_model'}
[0.000708] (-) JobUnselected: {'identifier': 'puzzlebot_odometry'}
[0.000722] (-) JobUnselected: {'identifier': 'robot_pose_estimator'}
[0.000777] (-) JobUnselected: {'identifier': 'robot_tf2_broadcaster'}
[0.000805] (-) JobUnselected: {'identifier': 'ugv02_cartographer'}
[0.000839] (EKFLocalization) JobQueued: {'identifier': 'EKFLocalization', 'dependencies': OrderedDict()}
[0.000877] (EKFLocalization) JobStarted: {'identifier': 'EKFLocalization'}
[0.012942] (EKFLocalization) JobProgress: {'identifier': 'EKFLocalization', 'progress': 'cmake'}
[0.013991] (EKFLocalization) JobProgress: {'identifier': 'EKFLocalization', 'progress': 'build'}
[0.014060] (EKFLocalization) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/javier/puzzlebot_ws/src/build/EKFLocalization', '--', '-j12', '-l12'], 'cwd': '/home/javier/puzzlebot_ws/src/build/EKFLocalization', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'javier'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/javier'), ('OLDPWD', '/home/javier/puzzlebot_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1975'), ('SYSTEMD_EXEC_PID', '2319'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5509'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'javier'), ('JOURNAL_STREAM', '8:9949'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'javier'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/javier/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/javier-ROG-Strix-G531GV-G531GV:@/tmp/.ICE-unix/2130,unix/javier-ROG-Strix-G531GV-G531GV:/tmp/.ICE-unix/2130'), ('INVOCATION_ID', '7220dc1058144348963468d69081ce48'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.9VEBX2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:83ee4ec3-a46c-4cbe-8d78-e45778467f4c'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/javier/puzzlebot_ws/src/build/EKFLocalization'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.053339] (EKFLocalization) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target EKFLozalization\x1b[0m\n'}
[0.070363] (EKFLocalization) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/EKFLozalization.dir/src/EKFLozalization.cpp.o\x1b[0m\n'}
[0.099833] (-) TimerEvent: {}
[0.200045] (-) TimerEvent: {}
[0.300269] (-) TimerEvent: {}
[0.400481] (-) TimerEvent: {}
[0.500697] (-) TimerEvent: {}
[0.600914] (-) TimerEvent: {}
[0.701130] (-) TimerEvent: {}
[0.801346] (-) TimerEvent: {}
[0.901569] (-) TimerEvent: {}
[1.001788] (-) TimerEvent: {}
[1.102016] (-) TimerEvent: {}
[1.202239] (-) TimerEvent: {}
[1.302457] (-) TimerEvent: {}
[1.402673] (-) TimerEvent: {}
[1.502889] (-) TimerEvent: {}
[1.603112] (-) TimerEvent: {}
[1.703324] (-) TimerEvent: {}
[1.803543] (-) TimerEvent: {}
[1.903759] (-) TimerEvent: {}
[2.004007] (-) TimerEvent: {}
[2.104229] (-) TimerEvent: {}
[2.204446] (-) TimerEvent: {}
[2.304680] (-) TimerEvent: {}
[2.404894] (-) TimerEvent: {}
[2.505113] (-) TimerEvent: {}
[2.605325] (-) TimerEvent: {}
[2.705541] (-) TimerEvent: {}
[2.805760] (-) TimerEvent: {}
[2.905980] (-) TimerEvent: {}
[3.006254] (-) TimerEvent: {}
[3.010896] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::calc_SigmaD()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.011066] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:166:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kkr\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KkR\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.011153] (EKFLocalization) StderrLine: {'line': b'  166 |       SigmaD(0,0) = \x1b[01;31m\x1b[Kkr\x1b[m\x1b[K * std::abs(wR);\n'}
[3.011207] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.011256] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[32m\x1b[KkR\x1b[m\x1b[K\n'}
[3.014890] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:167:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kkl\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KkL\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.014998] (EKFLocalization) StderrLine: {'line': b'  167 |       SigmaD(1,1) = \x1b[01;31m\x1b[Kkl\x1b[m\x1b[K * std::abs(wL);\n'}
[3.015075] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.015154] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[32m\x1b[KkL\x1b[m\x1b[K\n'}
[3.099401] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::calc_zHat()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.099546] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:197:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99 to an rvalue of type \xe2\x80\x98\x1b[01m\x1b[Kfloat\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.099605] (EKFLocalization) StderrLine: {'line': b'  197 |       z(1) = wrap_to_pi(\x1b[01;31m\x1b[Katan2(delta_zy,delta_zx)\x1b[m\x1b[K);\n'}
[3.099656] (EKFLocalization) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.099706] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:134:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kfloat EKFLocalization::wrap_to_pi(float&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.099757] (EKFLocalization) StderrLine: {'line': b'  134 |     float wrap_to_pi(\x1b[01;36m\x1b[Kfloat& theta\x1b[m\x1b[K){\n'}
[3.099805] (EKFLocalization) StderrLine: {'line': b'      |                      \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[3.106327] (-) TimerEvent: {}
[3.111950] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::calc_Z()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.112078] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:210:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.112153] (EKFLocalization) StderrLine: {'line': b'  210 |       Z = G * Sigma * \x1b[01;31m\x1b[Kg\x1b[m\x1b[K.transpose() + R;\n'}
[3.112204] (EKFLocalization) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.179719] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::calc_Sigma()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.179855] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:223:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kk\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.179911] (EKFLocalization) StderrLine: {'line': b'  223 |       Sigma = (I_3x3 - \x1b[01;31m\x1b[Kk\x1b[m\x1b[K * G) * Sigma;\n'}
[3.179964] (EKFLocalization) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.181056] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::publish_result()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.181163] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:264:48:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kleft operand of comma operator has no effect [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-value\x07-Wunused-value\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.181224] (EKFLocalization) StderrLine: {'line': b'  264 |       odometry_msg.pose.covariance[0]  = Sigma[\x1b[01;35m\x1b[K0\x1b[m\x1b[K, 0]\n'}
[3.181276] (EKFLocalization) StderrLine: {'line': b'      |                                                \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.181326] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:265:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kodometry_msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.181386] (EKFLocalization) StderrLine: {'line': b'  265 |       \x1b[01;31m\x1b[Kodometry_msg\x1b[m\x1b[K.pose.covariance[1]  = Sigma[0, 1]\n'}
[3.181441] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.181584] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::Set_Previous()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.181661] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:282:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kprev_Sigma\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.181717] (EKFLocalization) StderrLine: {'line': b'  282 |       \x1b[01;31m\x1b[Kprev_Sigma\x1b[m\x1b[K = Sigma\n'}
[3.181875] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.181937] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::PoseEstimation(float, bool)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.181997] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:290:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kz_measured\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.182071] (EKFLocalization) StderrLine: {'line': b'  290 |         \x1b[01;31m\x1b[Kz_measured\x1b[m\x1b[K(1) = 0.0; //landmark_measured(1);\n'}
[3.182148] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.186247] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:304:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kkl\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KkL\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.186338] (EKFLocalization) StderrLine: {'line': b'  304 |         \x1b[01;31m\x1b[Kkl\x1b[m\x1b[K = 0.0; //calibrated_klr(0);\n'}
[3.186395] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.186445] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[KkL\x1b[m\x1b[K\n'}
[3.189955] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:305:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kkr\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KkR\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.190053] (EKFLocalization) StderrLine: {'line': b'  305 |         \x1b[01;31m\x1b[Kkr\x1b[m\x1b[K = 0.0; //calibrated_klr(1);\n'}
[3.190158] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[3.190212] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[KkR\x1b[m\x1b[K\n'}
[3.194518] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:313:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEstimate_Q\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kestimate_Q\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.194615] (EKFLocalization) StderrLine: {'line': b'  313 |         \x1b[01;31m\x1b[KEstimate_Q\x1b[m\x1b[K()\n'}
[3.194669] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.194721] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kestimate_Q\x1b[m\x1b[K\n'}
[3.198918] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:319:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_Gradient_h\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_gradient_h\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.199060] (EKFLocalization) StderrLine: {'line': b'  319 |         \x1b[01;31m\x1b[KCalc_Gradient_h\x1b[m\x1b[K(); // Pose Model linerization\n'}
[3.199146] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.199199] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kcalc_gradient_h\x1b[m\x1b[K\n'}
[3.203163] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:320:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_SigmaHat\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_SigmaHat\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.203251] (EKFLocalization) StderrLine: {'line': b'  320 |         \x1b[01;31m\x1b[KCalc_SigmaHat\x1b[m\x1b[K(); // Uncertainty of Ideal calculated pose\n'}
[3.203306] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.203357] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kcalc_SigmaHat\x1b[m\x1b[K\n'}
[3.206392] (-) TimerEvent: {}
[3.207188] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:322:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_zHat\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_zHat\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.207291] (EKFLocalization) StderrLine: {'line': b'  322 |           \x1b[01;31m\x1b[KCalc_zHat\x1b[m\x1b[K(); // Ideal observed pose\n'}
[3.207348] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.207399] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcalc_zHat\x1b[m\x1b[K\n'}
[3.211808] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:323:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_Gradient_g\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_gradient_g\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.211900] (EKFLocalization) StderrLine: {'line': b'  323 |           \x1b[01;31m\x1b[KCalc_Gradient_g\x1b[m\x1b[K() ;// Observation Model linerization\n'}
[3.211957] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.212008] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcalc_gradient_g\x1b[m\x1b[K\n'}
[3.215802] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:324:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_Z\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_Z\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.215922] (EKFLocalization) StderrLine: {'line': b'  324 |           \x1b[01;31m\x1b[KCalc_Z\x1b[m\x1b[K() ;// Uncertainty of Ideal observed pose\n'}
[3.216002] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.216054] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcalc_Z\x1b[m\x1b[K\n'}
[3.221508] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:325:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_KalmanGain\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_kalman_gain\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.221605] (EKFLocalization) StderrLine: {'line': b'  325 |           \x1b[01;31m\x1b[KCalc_KalmanGain\x1b[m\x1b[K(); // Kalman Filter Gain!\n'}
[3.221661] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.221712] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcalc_kalman_gain\x1b[m\x1b[K\n'}
[3.226211] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:326:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_miu\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcacl_miu\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.226335] (EKFLocalization) StderrLine: {'line': b'  326 |           \x1b[01;31m\x1b[KCalc_miu\x1b[m\x1b[K(); // Estimated pose\n'}
[3.226397] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.226449] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcacl_miu\x1b[m\x1b[K\n'}
[3.230345] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:327:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KCalc_Sigma\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalc_Sigma\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.230485] (EKFLocalization) StderrLine: {'line': b'  327 |           \x1b[01;31m\x1b[KCalc_Sigma\x1b[m\x1b[K() ;// Estimated uncertainty of pose\n'}
[3.230577] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.230663] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kcalc_Sigma\x1b[m\x1b[K\n'}
[3.235383] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EKFLocalization::timer_callback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.235615] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:341:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdt_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdt\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.235719] (EKFLocalization) StderrLine: {'line': b'  341 |         \x1b[01;31m\x1b[Kdt_\x1b[m\x1b[K = current_time.seconds() - last_time.seconds();\n'}
[3.235808] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.235894] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kdt\x1b[m\x1b[K\n'}
[3.244658] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:9\x1b[m\x1b[K:\n'}
[3.244851] (EKFLocalization) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<float (EKFLocalization::*)(), EKFLocalization*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.244965] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, float (EKFLocalization::*)(), EKFLocalization*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.245085] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = float (EKFLocalization::*)(); _BoundArgs = {EKFLocalization*, const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.245231] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:364:42:\x1b[m\x1b[K   required from here\n'}
[3.245337] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[3.245446] (EKFLocalization) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[3.245562] (EKFLocalization) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[3.245656] (EKFLocalization) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[3.245745] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.245837] (EKFLocalization) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[3.245926] (EKFLocalization) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.246036] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[3.306494] (-) TimerEvent: {}
[3.349024] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:164\x1b[m\x1b[K,\n'}
[3.349277] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[3.349346] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:12\x1b[m\x1b[K:\n'}
[3.349403] (EKFLocalization) StderrLine: {'line': b'/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[KEigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = float; Eigen::Index = long int]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.349462] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:264:52:\x1b[m\x1b[K   required from here\n'}
[3.349515] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:408:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD\n'}
[3.349571] (EKFLocalization) StderrLine: {'line': b'  408 |       \x1b[01;31m\x1b[KEIGEN_STATIC_ASSERT\x1b[m\x1b[K(Derived::IsVectorAtCompileTime,\n'}
[3.349625] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.349698] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:408:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen::Matrix<float, 3, 3>::IsVectorAtCompileTime\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[3.406593] (-) TimerEvent: {}
[3.506828] (-) TimerEvent: {}
[3.607098] (-) TimerEvent: {}
[3.707312] (-) TimerEvent: {}
[3.807533] (-) TimerEvent: {}
[3.830184] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[3.830316] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[3.830383] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[3.830436] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[3.830487] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[3.830536] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[3.830585] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[3.830632] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[3.830681] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[3.830848] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[3.831034] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/tf2_ros/tf2_ros/transform_broadcaster.h:41\x1b[m\x1b[K,\n'}
[3.831098] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:14\x1b[m\x1b[K:\n'}
[3.831158] (EKFLocalization) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.831219] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831287] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831355] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831446] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831503] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:363:71:\x1b[m\x1b[K   required from here\n'}
[3.831551] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<float()>::function(std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831600] (EKFLocalization) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[3.831648] (EKFLocalization) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.831695] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[3.831783] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:9\x1b[m\x1b[K:\n'}
[3.831839] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = float; _ArgTypes = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.831891] (EKFLocalization) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[3.831951] (EKFLocalization) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.832018] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.832067] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[3.832139] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[3.832187] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:64\x1b[m\x1b[K,\n'}
[3.832233] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/specfun.h:45\x1b[m\x1b[K,\n'}
[3.832279] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/cmath:1935\x1b[m\x1b[K,\n'}
[3.832325] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:6\x1b[m\x1b[K:\n'}
[3.832371] (EKFLocalization) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.832420] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<float()>::_Callable<std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>&, std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>, std::__invoke_result<std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>&> >; _Tp = void; _Res = float; _ArgTypes = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832480] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832530] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832587] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832650] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832714] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832769] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:363:71:\x1b[m\x1b[K   required from here\n'}
[3.832839] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.832892] (EKFLocalization) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[3.832975] (EKFLocalization) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.833022] (EKFLocalization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[3.833090] (EKFLocalization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:9\x1b[m\x1b[K:\n'}
[3.833144] (EKFLocalization) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.833195] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833258] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Twist_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833342] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833420] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = std::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833477] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/javier/puzzlebot_ws/src/EKFLocalization/src/EKFLozalization.cpp:363:71:\x1b[m\x1b[K   required from here\n'}
[3.833527] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = float; _ArgTypes = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833577] (EKFLocalization) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[3.833625] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.833673] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<float()>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833722] (EKFLocalization) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[3.833769] (EKFLocalization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[3.833862] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = float; _ArgTypes = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.833912] (EKFLocalization) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[3.833959] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.834006] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<float()>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.834064] (EKFLocalization) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[3.834161] (EKFLocalization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[3.834232] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = float; _ArgTypes = {}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.834291] (EKFLocalization) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[3.834342] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.834403] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<float (EKFLocalization::*(EKFLocalization*, std::_Placeholder<1>))()>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.834454] (EKFLocalization) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[3.834503] (EKFLocalization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.834551] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = float; _ArgTypes = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.834600] (EKFLocalization) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[3.834668] (EKFLocalization) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.834730] (EKFLocalization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[3.907625] (-) TimerEvent: {}
[4.007849] (-) TimerEvent: {}
[4.108069] (-) TimerEvent: {}
[4.208319] (-) TimerEvent: {}
[4.308533] (-) TimerEvent: {}
[4.408747] (-) TimerEvent: {}
[4.508972] (-) TimerEvent: {}
[4.609211] (-) TimerEvent: {}
[4.709428] (-) TimerEvent: {}
[4.809651] (-) TimerEvent: {}
[4.910073] (-) TimerEvent: {}
[5.010303] (-) TimerEvent: {}
[5.110907] (-) TimerEvent: {}
[5.211295] (-) TimerEvent: {}
[5.311517] (-) TimerEvent: {}
[5.411958] (-) TimerEvent: {}
[5.512504] (-) TimerEvent: {}
[5.612745] (-) TimerEvent: {}
[5.712988] (-) TimerEvent: {}
[5.813605] (-) TimerEvent: {}
[5.913927] (-) TimerEvent: {}
[6.014499] (-) TimerEvent: {}
[6.115324] (-) TimerEvent: {}
[6.215543] (-) TimerEvent: {}
[6.316172] (-) TimerEvent: {}
[6.416389] (-) TimerEvent: {}
[6.516841] (-) TimerEvent: {}
[6.617127] (-) TimerEvent: {}
[6.717576] (-) TimerEvent: {}
[6.818190] (-) TimerEvent: {}
[6.918506] (-) TimerEvent: {}
[7.013185] (EKFLocalization) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/EKFLozalization.dir/build.make:76: CMakeFiles/EKFLozalization.dir/src/EKFLozalization.cpp.o] Error 1\n'}
[7.013474] (EKFLocalization) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/EKFLozalization.dir/all] Error 2\n'}
[7.013729] (EKFLocalization) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[7.016020] (EKFLocalization) CommandEnded: {'returncode': 2}
[7.018574] (-) TimerEvent: {}
[7.043606] (EKFLocalization) JobEnded: {'identifier': 'EKFLocalization', 'rc': 2}
[7.054235] (-) EventReactorShutdown: {}
